@page "/Login"

@using FileStorageApp.Shared.Dto;
@using FileStorageApp.Shared;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage

<h3>Login here</h3>


<EditForm Model="@user" OnValidSubmit="LoginFunction">
    <DataAnnotationsValidator />
        <div class="form-group">
            <label for="email">Email</label>
            <InputText type="text" class="form-control" id="email" @bind-Value="user.Email" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>
        <div class="form-group">
            <label for="pass">Password</label>
            <InputText type="password" class="form-control" id="pass" @bind-Value="user.password" />
            <ValidationMessage For="@(() => user.password)" />
        </div>
        <br>
        <br>
        <button type="submit" class="btn btn-primary">Login</button>
    <ValidationSummary />
    <br>
    <br>
</EditForm>

@* <AuthorizeView Roles="client">
    <Authorized>
        <span>You're authorized </span>
    </Authorized>
    <NotAuthorized>
        <span>You're not authorized, buddy.</span>
    </NotAuthorized>
</AuthorizeView> *@

@code {
    private LoginUser user = new LoginUser();
    private CryptoService cryptoService = new CryptoService();

    private async Task LoginFunction()
    {
       var result = await Http.PostAsJsonAsync("api/User/login", user);
        Console.WriteLine("merge?");
        if (result.IsSuccessStatusCode)
        {
            Response loginResponse = await result.Content.ReadFromJsonAsync<Response>();
            Console.WriteLine(loginResponse.Message);
            if (loginResponse.Succes)
            {
                string token = loginResponse.AccessToken;
                Console.WriteLine(token);
                await LocalStorage.SetItemAsync("token", token);
                await AuthStateProvider.GetAuthenticationStateAsync();
            }
        }
    
    }
}
